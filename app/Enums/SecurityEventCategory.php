<?php

// app/Enums/EventCategory.php

namespace App\Enums;

enum SecurityEventCategory: string
{
    // --- Primary Alarm Categories (Immediate Threat/Response Typically Required) ---
    case ALARM_BURGLARY = 'alarm_burglary';
    // Description: Indicates a potential unauthorized intrusion or breach of security at a premises.
    // Implies: Likely requires dispatch of law enforcement. High priority.

    case ALARM_PANIC_DURESS = 'alarm_panic_duress';
    // Description: A manually triggered alarm indicating a person is under threat, in a hold-up, or similar emergency.
    // Implies: Often silent at the site, requires immediate law enforcement dispatch. Highest priority.

    case ALARM_FIRE = 'alarm_fire';
    // Description: Detection of fire, smoke, high heat, or activation of a manual fire alarm.
    // Implies: Requires immediate dispatch of fire department. Highest priority.

    case ALARM_MEDICAL = 'alarm_medical';
    // Description: A request for emergency medical assistance, often triggered by a medical pendant or button.
    // Implies: Requires immediate dispatch of emergency medical services (EMS). High priority.

    case ALARM_ENVIRONMENTAL_HAZARD = 'alarm_environmental_hazard';
    // Description: Detection of critical environmental threats like gas leaks, carbon monoxide, major floods, or extreme temperatures posing immediate danger.
    // Implies: May require dispatch of specialized services (fire dept, utility company) and site notification. High priority.

    // --- Secondary Alarm / System Integrity Categories (Urgent, May Require Response) ---
    case ALARM_SYSTEM_TAMPER = 'alarm_system_tamper';
    // Description: Physical interference detected with security system components (panel, sensors, wiring).
    // Implies: Potential attempt to disable the system; may require investigation or dispatch. Medium to High priority.

    case ALARM_TECHNICAL_CRITICAL = 'alarm_technical_critical';
    // Description: A critical malfunction within the security panel or essential components that severely impairs system functionality and requires urgent attention.
    // Implies: Site may be unprotected. Urgent service needed. Medium to High priority. (Distinct from general 'TROUBLE')

    // --- System Operation & Access Categories (Routine, Informational, or Policy-Related) ---
    case SYSTEM_OPERATION_ACCESS = 'system_operation_access';
    // Description: Standard operational events such as arming/disarming the system, user access via codes, or door entry.
    // Implies: Generally informational, but can be important for audit trails or if unexpected (e.g., disarm at odd hour). Low to Medium priority.

    case ACCESS_CONTROL_EVENT = 'access_control_event';
    // Description: Events specifically from an access control system (card swipes, door forced/held open, access granted/denied).
    // Implies: Informational or may indicate a security breach depending on the specific event type. Low to Medium priority.

    // --- Trouble & Maintenance Categories (Non-Immediate, Requires Attention) ---
    case SYSTEM_TROUBLE_NON_CRITICAL = 'system_trouble_non_critical';
    // Description: Non-critical faults or issues within the security system (e.g., low battery, minor communication fault, zone trouble).
    // Implies: System may have reduced functionality or requires future maintenance. Low to Medium priority.

    case MAINTENANCE_REQUIRED = 'maintenance_required';
    // Description: Signals indicating the system requires scheduled maintenance or a specific service action.
    // Implies: Informational, for scheduling service. Low priority.

    // --- Test & Supervisory Categories (System Health & CSR Internal) ---
    case SYSTEM_TEST_SIGNAL = 'system_test_signal';
    // Description: Events generated during manual or automatic testing of the security system or its communication paths.
    // Implies: Generally informational, to confirm system health. Low priority unless test fails.

    case SUPERVISORY_CLIENT_SYSTEM = 'supervisory_client_system';
    // Description: Events generated by the CSR backend based on monitoring client system behavior (e.g., failure to arm by schedule, missed test).
    // Implies: May indicate a policy breach or potential security lapse at the client site. Medium priority.

    case SUPERVISORY_CSR_INFRASTRUCTURE = 'supervisory_csr_infrastructure';
    // Description: Alerts related to the health and status of the CSR's own infrastructure (e.g., internet loss, server issues).
    // Implies: Critical for CSR operations. High to Critical priority for internal teams.

    // --- Informational Categories (Logging, Auditing) ---
    case INFORMATIONAL_LOG = 'informational_log';
    // Description: General, non-critical events primarily for logging, auditing, or providing context (e.g., panel reboot, programming mode entry).
    // Implies: Low priority, typically no direct operator action needed unless correlated with other events.

    // --- Fallback ---
    case UNCLASSIFIED_EVENT = 'unclassified_event';
    // Description: The category of the event could not be determined by the parsing or mapping logic.
    // Implies: Requires manual review to classify and handle appropriately. Priority may need to be assessed.

    /**
     * Provides a human-readable label for the category.
     */
    public function label(): string
    {
        return match ($this) {
            self::ALARM_BURGLARY => 'Burglary Alarm',
            self::ALARM_PANIC_DURESS => 'Panic/Duress Alarm',
            self::ALARM_FIRE => 'Fire Alarm',
            self::ALARM_MEDICAL => 'Medical Alarm',
            self::ALARM_ENVIRONMENTAL_HAZARD => 'Environmental Hazard Alarm',
            self::ALARM_SYSTEM_TAMPER => 'System Tamper Alarm',
            self::ALARM_TECHNICAL_CRITICAL => 'Critical Technical Alarm',
            self::SYSTEM_OPERATION_ACCESS => 'System Operation/Access',
            self::ACCESS_CONTROL_EVENT => 'Access Control Event',
            self::SYSTEM_TROUBLE_NON_CRITICAL => 'System Trouble (Non-Critical)',
            self::MAINTENANCE_REQUIRED => 'Maintenance Required',
            self::SYSTEM_TEST_SIGNAL => 'System Test Signal',
            self::SUPERVISORY_CLIENT_SYSTEM => 'Supervisory (Client System)',
            self::SUPERVISORY_CSR_INFRASTRUCTURE => 'Supervisory (CSR Infrastructure)',
            self::INFORMATIONAL_LOG => 'Informational Log',
            self::UNCLASSIFIED_EVENT => 'Unclassified Event',
        };
    }

    /**
     * Indicates if this category typically represents an immediate, high-priority alarm.
     */
    public function isPrimaryAlarm(): bool
    {
        return in_array($this, [
            self::ALARM_BURGLARY,
            self::ALARM_PANIC_DURESS,
            self::ALARM_FIRE,
            self::ALARM_MEDICAL,
            self::ALARM_ENVIRONMENTAL_HAZARD,
        ]);
    }

    /**
     * Indicates if this category is related to system trouble or maintenance.
     */
    public function isTroubleOrMaintenance(): bool
    {
        return in_array($this, [
            self::ALARM_SYSTEM_TAMPER, // Can be seen as a form of trouble/integrity issue
            self::ALARM_TECHNICAL_CRITICAL,
            self::SYSTEM_TROUBLE_NON_CRITICAL,
            self::MAINTENANCE_REQUIRED,
        ]);
    }

    /**
     * Indicates if this category is primarily informational or routine.
     */
    public function isInformationalOrRoutine(): bool
    {
        return in_array($this, [
            self::SYSTEM_OPERATION_ACCESS,
            self::ACCESS_CONTROL_EVENT,
            self::SYSTEM_TEST_SIGNAL,
            self::INFORMATIONAL_LOG,
        ]);
    }
}
